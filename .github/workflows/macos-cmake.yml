name: macOS-CMake-Builds

on:
  workflow_call:
    inputs:
      checkout-ref:
        required: true
        description: "The ref we want to compile"
        type: string
      full-matrix:
        required: true
        description: "Build the full matrix"
        type: boolean
      sccache-mode:
        required: true
        description: "READ_WRITE or DISABLED"
        type: string
      vcpkg-cache-mode:
        required: true
        description: "read or readwrite"
        type: string
      execute-integration-tests:
        required: true
        description: "Integration tests require credentials."
        type: boolean

permissions:
  contents: read

jobs:
  cmake:
    name: cmake + ${{ matrix.os }} + ${{ matrix.shard }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      # Continue other builds even if one fails
      fail-fast: false
      matrix:
        exclude-from-full-trick: [ true ]
        os: [ macos-14 ]
        shard: [ All ]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        ref: ${{ inputs.checkout-ref }}
    - uses: google-github-actions/auth@v2
      if: ${{ inputs.sccache-mode == 'READ_WRITE' && inputs.vcpkg-cache-mode == 'readwrite' }}
      with:
        create_credentials_file: true
        credentials_json: ${{ secrets.BUILD_CACHE_KEY }}
    - uses: actions/setup-python@v5
      id: py311
      with:
        python-version: '3.11'
    - uses: google-github-actions/setup-gcloud@v2
      env:
        CLOUDSDK_PYTHON: ${{ steps.py311.outputs.python-path }}
    - name: Dynamic Configuration
      id: dynamic
      shell: bash
      run: |
        echo "vcpkg-version=$(cat ci/etc/vcpkg-version.txt)" >> "${GITHUB_OUTPUT}"
        all_features=(bigquery_unified)
        echo "features=${features:1}" >> "${GITHUB_OUTPUT}"
    - name: Install bash >= 5.x, Ninja, and bison
      run: brew install bash ninja bison
    - name: Pre Tests Disk Space
      run: df -m
    - name: Install CMake==3.27.2
      working-directory: "${{runner.temp}}"
      run: |
        # Remove the older CMake version
        brew unlink cmake
        # Download the Homebrew formula for CMake==3.27.2
        curl -fsSL -o cmake.rb https://raw.githubusercontent.com/Homebrew/homebrew-core/fd21fcf239bcd0231c9fed5719403ec128151af4/Formula/cmake.rb
        brew install cmake.rb
    - name: Download and Install sccache
      if: ${{ inputs.sccache-mode != 'DISABLED' }}
      working-directory: "${{runner.temp}}"
      run: |
        curl -fsSL https://github.com/mozilla/sccache/releases/download/v0.9.1/sccache-v0.9.1-x86_64-apple-darwin.tar.gz | \
          tar -zxf - --strip-components=1 && \
        chmod +x sccache && \
        mv sccache /Users/runner/.cargo/bin/sccache
    - name: Download and Install vcpkg
      working-directory: "${{runner.temp}}"
      run: |
        mkdir -p vcpkg
        curl -fsSL "https://github.com/microsoft/vcpkg/archive/${{ steps.dynamic.outputs.vcpkg-version }}.tar.gz" |
            tar -C vcpkg --strip-components=1 -zxf -
        vcpkg/bootstrap-vcpkg.sh -disableMetrics
    - name: Build google-cloud-cpp-bigquery
      run: |
        export VCPKG_ROOT="${{ runner.temp }}/vcpkg"
        export EXECUTE_INTEGRATION_TESTS=${{ inputs.execute-integration-tests }}
        /opt/homebrew/bin/bash ci/gha/builds/macos-cmake.sh ${{ steps.dynamic.outputs.features }}
    - name: Post Tests Disk Space
      run: df -m
    env:
      SCCACHE_GCS_BUCKET: cloud-cpp-community-gha-cache
      SCCACHE_GCS_KEY_PREFIX: bigquery-sccache/${{ matrix.os }}
      SCCACHE_GCS_RW_MODE: ${{ inputs.sccache-mode }}
      SCCACHE_IGNORE_SERVER_IO_ERROR: 1
      VCPKG_BINARY_SOURCES: x-gcs,gs://cloud-cpp-community-gha-cache/bigquery-vcpkg-cache/${{ matrix.os }},${{ inputs.vcpkg-cache-mode }}
      GHA_TEST_BUCKET: "gcs-grpc-team-cloud-cpp-testing-bucket"
